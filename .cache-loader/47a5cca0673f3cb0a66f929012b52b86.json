{"remainingRequest":"/Users/Mau/Documents/code/d3-starter-kit/node_modules/thread-loader/dist/cjs.js??ref--1-1!/Users/Mau/Documents/code/d3-starter-kit/node_modules/babel-loader/lib/index.js??ref--1-2!/Users/Mau/Documents/code/d3-starter-kit/node_modules/ts-loader/index.js??ref--1-3!/Users/Mau/Documents/code/d3-starter-kit/node_modules/tslint-loader/index.js??ref--2-0!/Users/Mau/Documents/code/d3-starter-kit/node_modules/preprocess-loader/index.js??ref--2-1!/Users/Mau/Documents/code/d3-starter-kit/src/app/transition-label/transition-label.ts","dependencies":[{"path":"/Users/Mau/Documents/code/d3-starter-kit/src/app/transition-label/transition-label.ts","mtime":1503267739000},{"path":"/Users/Mau/Documents/code/d3-starter-kit/.babelrc","mtime":1503436177000},{"path":"/Users/Mau/Documents/code/d3-starter-kit/node_modules/cache-loader/dist/cjs.js","mtime":1493198456000},{"path":"/Users/Mau/Documents/code/d3-starter-kit/node_modules/thread-loader/dist/cjs.js","mtime":1503926085000},{"path":"/Users/Mau/Documents/code/d3-starter-kit/node_modules/babel-loader/lib/index.js","mtime":1503096278000},{"path":"/Users/Mau/Documents/code/d3-starter-kit/node_modules/ts-loader/index.js","mtime":1503731439000},{"path":"/Users/Mau/Documents/code/d3-starter-kit/node_modules/tslint-loader/index.js","mtime":1492849359000},{"path":"/Users/Mau/Documents/code/d3-starter-kit/node_modules/preprocess-loader/index.js","mtime":1495825707000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar d3 = require(\"d3\");\nvar styles = require(\"./transition-label.scss\");\n\nvar TransitionLabelComponent = function () {\n    function TransitionLabelComponent() {\n        _classCallCheck(this, TransitionLabelComponent);\n\n        this.render();\n    }\n\n    _createClass(TransitionLabelComponent, [{\n        key: \"handleButtonExample\",\n        value: function handleButtonExample() {\n            this.changeLabelsBackgroundColor();\n        }\n    }, {\n        key: \"changeLabelsBackgroundColor\",\n        value: function changeLabelsBackgroundColor() {\n            d3.select(this.cardLabel).transition().duration(500).style(\"color\", this.randomColor());\n        }\n    }, {\n        key: \"randomColor\",\n        value: function randomColor() {\n            var colors = [\"purple\", \"blue\", \"green\", \"black\", \"orange\", \"pink\"];\n            var index = Math.round(Math.random() * 100 % colors.length);\n            return colors[index];\n        }\n    }, {\n        key: \"render\",\n        value: function render() {\n            // Create external div\n            this.el = document.createElement(\"div\");\n            this.el.classList.add(styles.transitionLabelComponent);\n            // Bootstrap card\n            var card = document.createElement(\"div\");\n            card.classList.add(\"card\");\n            card.style.marginBottom = \"10px\";\n            var cardBody = document.createElement(\"div\");\n            cardBody.classList.add(\"card-body\");\n            card.appendChild(cardBody);\n            this.el.appendChild(card);\n            // Card title\n            this.cardLabel = document.createElement(\"h4\");\n            this.cardLabel.classList.add(styles.helloLabel, \"card-title\");\n            this.cardLabel.appendChild(document.createTextNode(\"d3.js test: style transition\"));\n            cardBody.appendChild(this.cardLabel);\n            // Card description\n            var cardDescription = document.createElement(\"p\");\n            cardDescription.classList.add(\"card-text\");\n            cardDescription.appendChild(document.createTextNode(\"Click the button in order to change the color\"));\n            cardBody.appendChild(cardDescription);\n            // Card button\n            var button = document.createElement(\"a\");\n            button.classList.add(\"btn\", \"btn-primary\");\n            button.appendChild(document.createTextNode(\"Change color\"));\n            // Card button font awesome\n            var fa = document.createElement(\"span\");\n            fa.classList.add(\"fa\", \"fa-adjust\");\n            fa.style.marginLeft = \"10px\";\n            button.appendChild(fa);\n            button.addEventListener(\"click\", this.handleButtonExample.bind(this));\n            cardBody.appendChild(button);\n        }\n    }]);\n\n    return TransitionLabelComponent;\n}();\n\nexports.default = TransitionLabelComponent;",{"version":3,"file":"/Users/Mau/Documents/code/d3-starter-kit/src/app/transition-label/transition-label.ts","sourceRoot":"","sources":["/Users/Mau/Documents/code/d3-starter-kit/node_modules/tslint-loader/index.js??ref--2-0!/Users/Mau/Documents/code/d3-starter-kit/node_modules/preprocess-loader/index.js??ref--2-1!/Users/Mau/Documents/code/d3-starter-kit/src/app/transition-label/transition-label.ts"],"names":[],"mappings":"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","sourcesContent":["import * as d3 from \"d3\";\n\nimport * as styles from \"./transition-label.scss\";\n\nexport default class TransitionLabelComponent {\n    public el: HTMLElement;\n\n    protected cardLabel: HTMLElement;\n\n    constructor() {\n        this.render();\n    }\n\n    protected handleButtonExample(): void {\n        this.changeLabelsBackgroundColor();\n    }\n\n    protected changeLabelsBackgroundColor(): void {\n        d3.select(this.cardLabel)\n            .transition()\n            .duration(500)\n            .style(\"color\", this.randomColor());\n    }\n\n    protected randomColor(): string {\n        const colors = [\"purple\", \"blue\", \"green\", \"black\", \"orange\", \"pink\"];\n        const index = Math.round((Math.random() * 100) % colors.length);\n        return colors[index];\n    }\n\n    protected render(): void {\n        // Create external div\n        this.el = document.createElement(\"div\");\n        this.el.classList.add(styles.transitionLabelComponent);\n\n        // Bootstrap card\n        const card = document.createElement(\"div\");\n        card.classList.add(\"card\");\n        card.style.marginBottom = \"10px\";\n        const cardBody = document.createElement(\"div\");\n        cardBody.classList.add(\"card-body\");\n        card.appendChild(cardBody);\n        this.el.appendChild(card);\n\n        // Card title\n        this.cardLabel = document.createElement(\"h4\");\n        this.cardLabel.classList.add(styles.helloLabel, \"card-title\");\n        this.cardLabel.appendChild(document.createTextNode(\"d3.js test: style transition\"));\n        cardBody.appendChild(this.cardLabel);\n\n        // Card description\n        const cardDescription = document.createElement(\"p\");\n        cardDescription.classList.add(\"card-text\");\n        cardDescription.appendChild(document.createTextNode(\"Click the button in order to change the color\"));\n        cardBody.appendChild(cardDescription);\n\n        // Card button\n        const button = document.createElement(\"a\");\n        button.classList.add(\"btn\", \"btn-primary\");\n        button.appendChild(document.createTextNode(\"Change color\"));\n\n        // Card button font awesome\n        const fa = document.createElement(\"span\");\n        fa.classList.add(\"fa\", \"fa-adjust\");\n        fa.style.marginLeft = \"10px\";\n        button.appendChild(fa);\n\n        button.addEventListener(\"click\", this.handleButtonExample.bind(this));\n        cardBody.appendChild(button);\n    }\n}\n"]}]}